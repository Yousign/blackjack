{"version":3,"sources":["components/Message/Message.module.scss","components/Button/Button.module.scss","App.module.scss","components/Card/Card.module.scss","components/Cards/Cards.module.scss","components/DealerHand/DealerHand.module.scss","components/Score/Score.module.scss","components/PlayerHand/PlayerHand.module.scss","components/Actions/Actions.module.scss","services/apiService.js","constants.js","services/blackjackService.js","hooks/gameStateHook.js","components/Card/Card.js","components/Cards/Cards.js","components/Score/Score.js","components/DealerHand/DealerHand.js","components/Message/Message.js","components/PlayerHand/PlayerHand.js","components/Button/Button.js","components/Actions/Actions.js","App.js","index.js"],"names":["module","exports","deck","toJson","response","json","newShuffledDeck","deckCount","fetch","then","drawCardsFromDeck","deckId","count","STATUSES","JACK","QUEEN","KING","ACE","getScore","cards","rearranged","forEach","card","value","push","unshift","reduce","total","parseInt","IDLE","PLAYER_TURN","DEALER_TURN","PLAYER_WINS","BLACKJACK","DEALER_WINS","PLAYER","DEALER","initialState","dealerCards","playerCards","Card","code","className","ClassNames","styles","Image","src","alt","Cards","map","index","key","Score","children","ariaLabel","aria-live","aria-label","DealerHand","gameStatus","displayDealerScoreCards","includes","dealerCardHead","slice","adequateDealerCards","dealerScore","Dealer","length","Blackjack","YouWin","YouLose","Message","Overlay","Dialog","role","aria-labelledby","id","PlayerHand","playerScore","Player","buttonColors","Button","onClick","emoji","color","disabled","classNames","neutral","warning","success","type","aria-hidden","Actions","playerHit","playerStand","App","useState","gameState","setGameState","setGameStatus","newGame","a","deck_id","drawCard","useCallback","player","useEffect","useGameState","PlayButton","LetsPlay","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,yBAAyB,UAAY,2BAA2B,OAAS,wBAAwB,QAAU,2B,iBCA3MD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,QAAU,wBAAwB,QAAU,wBAAwB,MAAQ,wB,qBCAhKD,EAAOC,QAAU,CAAC,IAAM,mB,kBCAxBD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,sB,iBCApDD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,6B,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,iBCA1BD,EAAOC,QAAU,CAAC,OAAS,6B,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,mICCfC,EAAI,UADO,iCACP,SACXC,EAAS,SAAAC,GAAQ,OAAIA,EAASC,QAEvBC,EAAkB,eAACC,EAAD,uDAAa,EAAb,OAAmBC,MAAM,GAAD,OAAIN,EAAJ,oCAAoCK,IAAaE,KAAKN,IAChGO,EAAoB,SAACC,GAAD,IAASC,EAAT,uDAAiB,EAAjB,OAAuBJ,MAAM,GAAD,OAAIN,EAAJ,YAAYS,EAAZ,wBAAkCC,IAASH,KAAKN,ICChGU,EACL,OADKA,EAEE,cAFFA,EAGE,cAHFA,EAIA,YAJAA,EAKE,cALFA,EAME,cCXPC,EDAA,OCAMC,EDCL,QCDYC,EDEb,OCFmBC,EDDpB,MCGMC,EAAW,SAACC,GACvB,IAAMC,EAAa,GASnB,OARAD,EAAME,SAAQ,SAAAC,GACRA,EAAKC,QAAUN,EACjBG,EAAWI,KAAKF,GACPA,EAAKC,OACdH,EAAWK,QAAQH,MAIhBF,EAAWM,QAAO,SAACC,EAAOL,GAC/B,OAAIA,EAAKC,QAAUT,GAAQQ,EAAKC,QAAUR,GAASO,EAAKC,QAAUP,EACzDW,EAAQ,GACNL,EAAKC,QAAUN,EAChBU,EAAQ,IAAM,GAAMA,EAAQ,GAAKA,EAAQ,EAE1CA,EAAQC,SAASN,EAAKC,MAAO,KAErC,IChBHM,EAMEhB,EALFiB,EAKEjB,EAJFkB,EAIElB,EAHFmB,EAGEnB,EAFFoB,EAEEpB,EADFqB,EACErB,EAEIsB,EFIE,SEJMC,EFGN,SEDJC,EAAe,CACnB1B,OAAQ,KACR2B,YAAa,GACbC,YAAa,I,sCCHAC,MAZf,YAAyB,IAATC,EAAQ,EAARA,KACd,OACE,oBAAIC,UAAWC,IAAWC,IAAOJ,KAAM,0BAAvC,SACE,qBAAKE,UAAWE,IAAOC,MAAOC,IAAG,wBAAmBL,EAAnB,QAA+BM,IAAI,Q,iBCW3DC,MAdf,YAA2B,IAAV7B,EAAS,EAATA,MACf,OACE,oBAAIuB,UAAWE,IAAOI,MAAtB,SACG7B,EAAM8B,KAAI,SAAC3B,EAAM4B,GAAP,OAAiB,wBAAC,EAAD,2BAAU5B,GAAV,IAAgB6B,IAAKD,W,kCCaxCE,MAjBf,YAAyC,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACzB,OACE,qBACEZ,UAAWE,IAAOQ,MAClBG,YAAU,SACVC,aAAYF,EAHd,SAKGD,KCDLtB,EAGElB,EAFFmB,EAEEnB,EADFqB,EACErB,EA6BW4C,OA3Bf,YAAkD,IAA5BC,EAA2B,EAA3BA,WAAYpB,EAAe,EAAfA,YAC1BqB,EAA0B,CAAC5B,EAAaC,EAAaE,GAAa0B,SAASF,GAC3EG,EAAiBvB,EAAYwB,MAAM,EAAG,GACtCC,EAAsBJ,EAA0BrB,EAAH,sBAAqBuB,GAArB,CAAqC,CAAEpB,KAAM,UAC1FuB,EAAc9C,EAAS6C,GAE7B,OACE,sBAAKrB,UAAWE,IAAOqB,OAAvB,UAE2B,IAAvB3B,EAAY4B,QACV,cAAC,EAAD,CACEZ,UAAU,eADZ,SAEEU,IAEN,cAAC,EAAD,CAAO7C,MAAO4C,Q,uCCvBlB9B,GAGEpB,EAFFmB,GAEEnB,EADFqB,GACErB,EAEEsD,GAAY,kBAAM,qBAAKzB,UAAWE,KAAOuB,UAAvB,yBAClBC,GAAS,kBAAM,qBAAK1B,UAAWE,KAAOwB,OAAvB,uBACfC,GAAU,kBAAM,qBAAK3B,UAAWE,KAAOyB,QAAvB,6BA2CPC,OAzCf,YAA4C,IAAzBZ,EAAwB,EAAxBA,WAAYL,EAAY,EAAZA,SACzBiB,EAAU,KACd,OAAQZ,GACN,KAAKzB,GACHqC,EAAUH,GACV,MACF,KAAKnC,GACHsC,EAAUF,GACV,MACF,KAAKlC,GACHoC,EAAUD,GACV,MACF,QACEC,EAAU,KAGd,OAAKA,EAGH,qCACE,qBAAK5B,UAAWE,KAAO2B,UACvB,cAAC,KAAD,UACI,sBACE7B,UAAWE,KAAO4B,OAClBC,KAAK,SACLC,kBAAgB,eAHlB,UAKE,qBACEhC,UAAWE,KAAO0B,QAClBf,YAAU,SACVoB,GAAG,iBAHL,SAKE,cAACL,EAAD,MAEDjB,UAlBU,M,wCCARuB,OAvBf,YAAsC,IAAhBrC,EAAe,EAAfA,YACdsC,EAAc3D,EAASqB,GAE7B,OACE,sBAAKG,UAAWE,KAAOkC,OAAvB,UACE,cAAC,EAAD,CAAO3D,MAAOoB,IAEW,IAAvBA,EAAY2B,QACV,cAAC,EAAD,CACEZ,UAAU,aADZ,SAEEuB,Q,2BCbCE,GACF,UADEA,GAEF,UAFEA,GAGF,UAsCIC,OAnCf,YAA6E,IAAD,EAA1DC,EAA0D,EAA1DA,QAA0D,IAAjDC,aAAiD,MAAzC,GAAyC,EAArCC,EAAqC,EAArCA,MAAO9B,EAA8B,EAA9BA,SAA8B,IAApB+B,gBAAoB,SAC1E,OACE,yBACE1C,UAAW2C,IACTzC,KAAOoC,QADY,oBAGhBpC,KAAO0C,QAAUH,IAAUJ,IAHX,eAIhBnC,KAAO2C,QAAUJ,IAAUJ,IAJX,eAKhBnC,KAAO4C,QAAUL,IAAUJ,IALX,IAQrBU,KAAK,SACLL,SAAUA,EACVH,QAASA,EAXX,UAcIC,GACE,sBACEQ,eAAA,EACAhD,UAAWE,KAAOsC,MAFpB,SAGEA,IAEL7B,M,oBCCQsC,OA7Bf,YAAuD,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,YAAaT,EAAW,EAAXA,SACzC,OACE,sBAAK1C,UAAWE,KAAO+C,QAAvB,UACE,cAAC,GAAD,CACEP,SAAUA,EACVH,QAASY,EACTV,MAAOJ,GACPG,MAAM,eAJR,mBAQA,cAAC,GAAD,CACEE,SAAUA,EACVH,QAASW,EACTT,MAAOJ,GACPG,MAAM,eAJR,qBC2CSY,OA/Cf,WAAgB,IAAD,ETWR,WAA0B,IAAD,EACIC,mBAAS1D,GADb,mBACvB2D,EADuB,KACZC,EADY,OAEMF,mBAASlE,GAFf,mBAEvB6B,EAFuB,KAEXwC,EAFW,KAIxBC,EAAO,uCAAG,kCAAAC,EAAA,sEACoB9F,IADpB,uBACGK,EADH,EACN0F,QADM,SAEU3F,EAAkBC,EAAQ,GAFpC,gBAENQ,EAFM,EAENA,MAER8E,EAAa,2BACR5D,GADO,IAEV1B,SACA2B,YAAanB,EAAM2C,MAAM,EAAG,GAC5BvB,YAAapB,EAAM2C,MAAM,EAAG,MAE9BoC,EAAcpE,GAVA,4CAAH,qDAiBPwE,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,iBAAAJ,EAAA,sEACH1F,EAAkBsF,EAAUrF,OAAQ,GADjC,gBACnBQ,EADmB,EACnBA,MAER8E,EAAa,2BACRD,GADO,IAEVzD,YAAaiE,IAAWrE,EAAX,sBACL6D,EAAUzD,aADL,YACqBpB,IAC9B6E,EAAUzD,YACdD,YAAakE,IAAWpE,EAAX,sBACL4D,EAAU1D,aADL,YACqBnB,IAC9B6E,EAAU1D,eAVW,2CAAD,sDAYzB,CAAC0D,IAiCJ,OA3BAS,qBAAU,WACR,IAAMzC,EAAc9C,EAAS8E,EAAU1D,aACjCuC,EAAc3D,EAAS8E,EAAUzD,aAEnCmB,IAAe5B,EF5CQ,KE6CrB+C,EACmC,IAAjCmB,EAAUzD,YAAY2B,OACxBgC,EAAcjE,GAEdiE,EAAclE,GAEP6C,EFnDc,IEoDvBqB,EAAchE,GAEPwB,IAAe3B,IACpBiC,EFtDsB,GEuDxBsC,EAASlE,GAGP8D,EADElC,EAAca,GAAeb,GF1DV,GE2DP9B,EAEAF,MAInB,CAACgE,EAAU1D,YAAa0D,EAAUzD,YAAamB,EAAY4C,IAEvD,CAACN,EAAWtC,EAAYyC,EAjDX,WAClBD,EAAcnE,IAiBE,WAChBuE,EAASnE,KStCPuE,GATS,0BAETpE,EAFS,EAETA,YACAC,EAHS,EAGTA,YAEFmB,EALW,KAMXyC,EANW,KAOXN,EAPW,KAQXD,EARW,KAWPe,EAAa,kBACjB,cAAC,GAAD,CACEjE,UAAWE,KAAOgE,SAClBnB,KAAK,SACLR,QAASkB,EACThB,MAAOJ,GAJT,0BAQF,OAAGrB,IAAe7C,EAEd,qBAAK6B,UAAWE,KAAOkD,IAAvB,SACE,cAACa,EAAD,MAMF,sBAAKjE,UAAWE,KAAOkD,IAAvB,UACE,cAAC,GAAD,CACEpC,WAAYA,EACZpB,YAAaA,IAEf,cAAC,GAAD,CAAYC,YAAaA,IACzB,cAAC,GAAD,CACEqD,UAAWA,EACXC,YAAaA,EACbT,SAAU1B,IAAe7C,IAE3B,cAAC,GAAD,CAAS6C,WAAYA,EAArB,SACE,cAACiD,EAAD,UChDVE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.71cf82a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Message_Overlay__369KI\",\"Dialog\":\"Message_Dialog__2gJdp\",\"Message\":\"Message_Message__2fF6f\",\"Blackjack\":\"Message_Blackjack__3Vjqd\",\"YouWin\":\"Message_YouWin__6Auqr\",\"YouLose\":\"Message_YouLose__Rryjl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2BYYQ\",\"neutral\":\"Button_neutral__2RQQQ\",\"warning\":\"Button_warning__2NvwO\",\"success\":\"Button_success__2AdjY\",\"emoji\":\"Button_emoji__gkm6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__37Yu0\",\"Image\":\"Card_Image__35QkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cards\":\"Cards_Cards__GVyc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dealer\":\"DealerHand_Dealer__2YEEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Score\":\"Score_Score__2Mbjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Player\":\"PlayerHand_Player__3HBK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Actions\":\"Actions_Actions__3Yco8\"};","\nexport const endpoint = 'https://deckofcardsapi.com/api';\nexport const deck = `${endpoint}/deck`;\nconst toJson = response => response.json();\n\nexport const newShuffledDeck = (deckCount = 6) => fetch(`${deck}/new/shuffle/?deck_count=${deckCount}`).then(toJson);\nexport const drawCardsFromDeck = (deckId, count = 1) => fetch(`${deck}/${deckId}/draw/?count=${count}`).then(toJson);\n","export const CARDS = {\n  ACE: 'ACE',\n  JACK: 'JACK',\n  QUEEN: 'QUEEN',\n  KING: 'KING',\n};\n\nexport const STATUSES = {\n  IDLE: 'IDLE',\n  PLAYER_TURN: 'PLAYER_TURN',\n  DEALER_TURN: 'DEALER_TURN',\n  BLACKJACK: 'BLACKJACK',\n  PLAYER_WINS: 'PLAYER_WINS',\n  DEALER_WINS: 'DEALER_WINS',\n};\n\nexport const PLAYERS = {\n  DEALER: 'DEALER',\n  PLAYER: 'PLAYER',\n};\n\nexport const BLACKJACK_VALUE = 21;\nexport const DEALER_MIN_VALUE = 17;\n","import { CARDS } from '../constants';\n\nconst { JACK, QUEEN, KING, ACE } = CARDS;\n\nexport const getScore = (cards) => {\n  const rearranged = [];\n  cards.forEach(card => {\n    if (card.value === ACE) {\n      rearranged.push(card);\n    } else if (card.value) {\n      rearranged.unshift(card);\n    }\n  });\n\n  return rearranged.reduce((total, card) => {\n    if (card.value === JACK || card.value === QUEEN || card.value === KING) {\n      return total + 10;\n    } else if (card.value === ACE) {\n      return (total + 11 <= 21) ? total + 11 : total + 1;\n    } else {\n      return total + parseInt(card.value, 0);\n    }\n  }, 0);\n};\n","import { useEffect, useState, useCallback } from 'react'\nimport { newShuffledDeck, drawCardsFromDeck } from '../services/apiService';\nimport { getScore } from '../services/blackjackService';\nimport { STATUSES, PLAYERS, BLACKJACK_VALUE, DEALER_MIN_VALUE } from '../constants';\n\nconst {\n  IDLE,\n  PLAYER_TURN,\n  DEALER_TURN,\n  PLAYER_WINS,\n  BLACKJACK,\n  DEALER_WINS,\n} = STATUSES;\n\nconst { PLAYER, DEALER } = PLAYERS;\n\nconst initialState = {\n  deckId: null,\n  dealerCards: [],\n  playerCards: [],\n};\n\nexport function useGameState () {\n  const [gameState, setGameState] = useState(initialState);\n  const [gameStatus, setGameStatus] = useState(IDLE);\n\n  const newGame = async () => {\n    const { deck_id: deckId } = await newShuffledDeck();\n    const { cards } = await drawCardsFromDeck(deckId, 4);\n\n    setGameState({\n      ...initialState,\n      deckId,\n      dealerCards: cards.slice(0, 2),\n      playerCards: cards.slice(2, 4),\n    });\n    setGameStatus(PLAYER_TURN);\n  };\n\n  const playerStand = () => {\n    setGameStatus(DEALER_TURN);\n  };\n\n  const drawCard = useCallback(async (player) => {\n    const { cards } = await drawCardsFromDeck(gameState.deckId, 1);\n\n    setGameState({\n      ...gameState,\n      playerCards: player === PLAYER\n        ? [...gameState.playerCards, ...cards]\n        : gameState.playerCards,\n      dealerCards: player === DEALER\n        ? [...gameState.dealerCards, ...cards]\n        : gameState.dealerCards,\n    });\n  }, [gameState]);\n\n  const playerHit = () => {\n    drawCard(PLAYER);\n  };\n\n  useEffect(() => {\n    const dealerScore = getScore(gameState.dealerCards);\n    const playerScore = getScore(gameState.playerCards);\n\n    if (gameStatus === PLAYER_TURN) {\n      if (playerScore === BLACKJACK_VALUE) {\n        if (gameState.playerCards.length === 2 ) {\n          setGameStatus(BLACKJACK);\n        } else {\n          setGameStatus(PLAYER_WINS);\n        }\n      } else if (playerScore > BLACKJACK_VALUE) {\n        setGameStatus(DEALER_WINS);\n      }\n    } else if (gameStatus === DEALER_TURN) {\n      if (dealerScore < DEALER_MIN_VALUE) {\n        drawCard(DEALER);\n      } else {\n        if (dealerScore > playerScore && dealerScore <= BLACKJACK_VALUE) {\n          setGameStatus(DEALER_WINS);\n        } else {\n          setGameStatus(PLAYER_WINS);\n        }\n      }\n    }\n  }, [gameState.dealerCards, gameState.playerCards, gameStatus, drawCard]);\n\n  return [gameState, gameStatus, newGame, playerStand, playerHit]\n};","import ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './Card.module.scss';\n\nfunction Card({ code }) {\n  return (\n    <li className={ClassNames(styles.Card, 'animate__fadeInDownBig')}>\n      <img className={styles.Image} src={`/assets/cards/${code}.svg`} alt=\"\" />\n    </li>\n  );\n};\n\nCard.propTypes = {\n  code: PropTypes.string.isRequired,\n};\n\nexport default Card;\n","import PropTypes from 'prop-types';\nimport Card from '../Card/Card';\nimport styles from './Cards.module.scss';\n\nfunction Cards({ cards }) {\n  return (\n    <ul className={styles.Cards}>\n      {cards.map((card, index) => <Card {...card} key={index} />)}\n    </ul>\n  );\n};\n\nCards.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    code: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default Cards;\n","import PropTypes from 'prop-types';\nimport styles from './Score.module.scss';\n\nfunction Score({ children, ariaLabel }) {\n  return (\n    <div\n      className={styles.Score}\n      aria-live=\"polite\"\n      aria-label={ariaLabel}\n    >\n      {children}\n    </div>\n  );\n}\n\nScore.propTypes = {\n  children: PropTypes.node.isRequired,\n  ariaLabel: PropTypes.string.isRequired,\n};\n\nexport default Score;\n","import PropTypes from 'prop-types';\nimport { getScore } from '../../services/blackjackService';\nimport Cards from '../Cards/Cards';\n\nimport styles from './DealerHand.module.scss';\n\nimport { STATUSES } from '../../constants';\nimport Score from '../Score/Score';\nconst {\n  DEALER_TURN,\n  PLAYER_WINS,\n  DEALER_WINS,\n} = STATUSES;\n\nfunction DealerHand({ gameStatus, dealerCards }) {\n  const displayDealerScoreCards = [DEALER_TURN, PLAYER_WINS, DEALER_WINS].includes(gameStatus);\n  const dealerCardHead = dealerCards.slice(0, 1);\n  const adequateDealerCards = displayDealerScoreCards ? dealerCards : [...dealerCardHead, { code: 'BACK' }];\n  const dealerScore = getScore(adequateDealerCards);\n\n  return (\n    <div className={styles.Dealer}>\n      {\n        dealerCards.length !== 0 &&\n          <Score\n            ariaLabel='Dealer score'\n          >{dealerScore}</Score>\n      }\n      <Cards cards={adequateDealerCards} />\n    </div>\n  );\n}\n\nDealerHand.propTypes = {\n  gameStatus: PropTypes.string.isRequired,\n  dealerCards: PropTypes.arrayOf(PropTypes.shape({\n    code: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\n\nexport default DealerHand;\n","import FocusTrap from 'react-focus-trap';\nimport { STATUSES } from '../../constants';\nimport styles from './Message.module.scss';\n\nconst {\n  BLACKJACK,\n  PLAYER_WINS,\n  DEALER_WINS,\n} = STATUSES;\n\nconst Blackjack = () => <div className={styles.Blackjack}>BLACKJACK!</div>;\nconst YouWin = () => <div className={styles.YouWin}>YOU WIN!</div>;\nconst YouLose = () => <div className={styles.YouLose}>DEALER WINS...</div>;\n\nfunction Message({ gameStatus, children }) {\n  let Message = null;\n  switch (gameStatus) {\n    case BLACKJACK:\n      Message = Blackjack;\n      break;\n    case PLAYER_WINS:\n      Message = YouWin;\n      break\n    case DEALER_WINS:\n      Message = YouLose;\n      break;\n    default:\n      Message = null;\n  }\n\n  if (!Message) return null;\n\n  return (\n    <>\n      <div className={styles.Overlay}></div>\n      <FocusTrap>\n          <div\n            className={styles.Dialog}\n            role=\"dialog\"\n            aria-labelledby=\"dialog1Title\"\n          >\n            <div\n              className={styles.Message}\n              aria-live=\"polite\"\n              id=\"dialog-message\"\n            >\n              <Message />\n            </div>\n            {children}\n          </div>\n      </FocusTrap>\n    </>\n  );\n}\n\nexport default Message;\n","import PropTypes from 'prop-types';\nimport { getScore } from '../../services/blackjackService';\nimport Cards from '../Cards/Cards';\nimport Score from '../Score/Score';\n\nimport styles from './PlayerHand.module.scss';\n\nfunction PlayerHand({ playerCards }) {\n  const playerScore = getScore(playerCards);\n\n  return (\n    <div className={styles.Player}>\n      <Cards cards={playerCards} />\n      {\n        playerCards.length !== 0 &&\n          <Score\n            ariaLabel='Your score'\n          >{playerScore}</Score>\n      }\n    </div>\n  );\n}\n\n\nPlayerHand.propTypes = {\n  playerCards: PropTypes.arrayOf(PropTypes.shape({\n    code: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default PlayerHand;\n","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './Button.module.scss';\n\nexport const buttonColors = {\n  NEUTRAL: 'neutral',\n  WARNING: 'warning',\n  SUCCESS: 'success',\n};\n\nfunction Button({ onClick, emoji = '', color, children, disabled = false }) {\n  return (\n    <button\n      className={classNames(\n        styles.Button,\n        {\n          [styles.neutral]: color === buttonColors.NEUTRAL,\n          [styles.warning]: color === buttonColors.WARNING,\n          [styles.success]: color === buttonColors.SUCCESS,\n        }\n      )}\n      type=\"button\"\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {\n        emoji &&\n          <span\n            aria-hidden\n            className={styles.emoji}\n          >{emoji}</span>\n      }\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  emoji: PropTypes.string,\n  color: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport Button, { buttonColors } from '../Button/Button'\nimport styles from './Actions.module.scss';\n\nfunction Actions({ playerHit, playerStand, disabled}) {\n  return (\n    <div className={styles.Actions}>\n      <Button\n        disabled={disabled}\n        onClick={playerStand}\n        color={buttonColors.WARNING}\n        emoji=\"🖐\"\n      >\n        Stand\n      </Button>\n      <Button\n        disabled={disabled}\n        onClick={playerHit}\n        color={buttonColors.SUCCESS}\n        emoji=\"👉\"\n      >\n        Hit\n      </Button>\n    </div>\n  );\n}\n\nActions.propTypes = {\n  playerHit: PropTypes.func.isRequired,\n  playerStand: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n\nexport default Actions;\n","\nimport { useGameState } from './hooks/gameStateHook';\nimport DealerHand from './components/DealerHand/DealerHand';\nimport Message from './components/Message/Message';\n\nimport styles from './App.module.scss';\nimport PlayerHand from './components/PlayerHand/PlayerHand';\nimport Button, { buttonColors } from './components/Button/Button';\nimport Actions from './components/Actions/Actions';\nimport { STATUSES } from './constants';\n\nfunction App() {\n  const [{\n      dealerCards,\n      playerCards\n    },\n    gameStatus,\n    newGame,\n    playerStand,\n    playerHit,\n  ] = useGameState();\n\n  const PlayButton = () => (\n    <Button\n      className={styles.LetsPlay}\n      type=\"button\"\n      onClick={newGame}\n      color={buttonColors.NEUTRAL}\n    >LET'S PLAY!</Button>\n  );\n\n  if(gameStatus === STATUSES.IDLE){\n    return (\n      <div className={styles.App}>\n        <PlayButton />\n      </div>\n    );\n  }\n\n  return (\n      <div className={styles.App}>\n        <DealerHand\n          gameStatus={gameStatus}\n          dealerCards={dealerCards}\n        />\n        <PlayerHand playerCards={playerCards} />\n        <Actions\n          playerHit={playerHit}\n          playerStand={playerStand}\n          disabled={gameStatus !== STATUSES.PLAYER_TURN}\n        />\n        <Message gameStatus={gameStatus}>\n          <PlayButton />\n        </Message>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}